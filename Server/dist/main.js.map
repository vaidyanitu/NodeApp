{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,mUAAmU,2CAA2C,whB;;;;;;;;;;;;;;;;;;;;;;;;;;ACApU;AACE;AACP;AAQrC;IAIE,sBAAoB,IAAS;QAA7B,iBAOC;QAPmB,SAAI,GAAJ,IAAI,CAAK;QAH7B,UAAK,GAAG,KAAK,CAAC;QACd,aAAQ,GAAM,EAAU,CAAC;QAGvB,QAAQ,CAAC;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;aAC7B,IAAI,CAAC,0DAAG,CAAC,aAAG,IAAE,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;aAC1B,SAAS,CAAC,UAAC,GAAQ;YAClB,KAAI,CAAC,QAAQ,GAAC,GAAG,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IAXU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKyB,kDAAI;OAJlB,YAAY,CAaxB;IAAD,mBAAC;CAAA;AAbwB;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AACD;AAEO;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAXrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,wDAAU;aACX;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;ACjBtB;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n\\r\\n    <div class=\\\"disp bcolor\\\">\\r\\n        <h1 class=\\\"alignleft\\\"></h1>\\r\\n        <h1 class=\\\"aligncenter\\\"><i class=\\\"fa fa-puzzle-piece\\\" aria-hidden=\\\"true\\\"></i> My Node Application</h1>\\r\\n        <div style=\\\"float: right;\\\">\\r\\n            <a *ngIf=\\\"authUser._id; else elseBlock\\\" href=\\\"/logout\\\" class=\\\"btn btn-default\\\">Logout</a>\\r\\n            <ng-template #elseBlock><a href=\\\"/\\\" class=\\\"btn btn-default\\\">Login</a></ng-template>     \\r\\n            <!-- <a href=\\\"/unlink/google\\\" class=\\\"btn btn-danger\\\">Unlink <span class=\\\"fa fa-google-plus\\\"></span></a> -->       \\r\\n            <a href=\\\"/connect/google\\\" class=\\\"btn btn-danger\\\">Connect <span class=\\\"fa fa-google-plus\\\"></span></a>                           \\r\\n        </div>                            \\r\\n    </div>\\r\\n   \\r\\n\"","import { Component } from '@angular/core';\r\nimport{ Http,Response} from '@angular/http';\r\nimport { map } from \"rxjs/operators\";\r\nimport {User} from './user.model';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n  authUser:User={} as User;\r\n\r\n  constructor(private http:Http){\r\n    debugger;\r\n    this.http.get('/authenticate')\r\n    .pipe(map(res=>res.json()))\r\n    .subscribe((res:User)=>{      \r\n      this.authUser=res;\r\n    });\r\n  }\r\n  \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport{HttpModule} from '@angular/http';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}